{"ast":null,"code":"import { environment } from \"../../environments/environment\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AccountService = /*#__PURE__*/(() => {\n  class AccountService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.currentAdminSource = new BehaviorSubject(null);\n      this.currentAdmin$ = this.currentAdminSource.asObservable();\n    }\n\n    login(model) {\n      return this.http.post(this.baseUrl + 'account/login', model).pipe(map(response => {\n        const admin = response;\n\n        if (admin) {\n          this.setCurrentAdmin(admin);\n        }\n\n        return admin;\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem(\"user\");\n      this.currentAdminSource.next(null);\n    }\n\n    setCurrentAdmin(admin) {\n      localStorage.setItem('user', JSON.stringify(admin));\n      this.currentAdminSource.next(admin);\n    }\n\n  }\n\n  AccountService.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountService;\n})();","map":null,"metadata":{},"sourceType":"module"}